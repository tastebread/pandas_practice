import pandas as pd

#시리즈 클래스
# Series 클래스 1차원배열과 비슷하지 데이터를 표시하는 Index 붙일 수 있다
#시리즈 = 값(value) + 인덱스(index)

print("시리즈 생성")
# 인덱스의 길이 데이터의 길이와 같아야한다

s = pd.Series([9904312, 3448737, 2890451, 2466052],
              index =["서울","부산","인천","대구"])
print(s)
print("\n")
#인덱스를 지정하지 않았을때
print("인덱스를 지정하지 않았을때")
print(pd.Series(range(10,14)))
print("\n")
print("시리즈 인덱스 index 속성 접근 : {}\n"
      "시리즈 인덱스 value 속성 접근 : {}".format(s.index,s.values))
print("\n")
s.name = "인구" #name 속성을 이용하여 시리즈 데이 이름을 붙일수있다
s.index.name = "도시" #인덱스에서도 가능
print(s)
print("\n")

#시리즈 인덱싱
print("시리즈 인덱싱")
print(s[1], s["부산"]) #배열 인덱싱 or 인덱스 라벨을 이용 슬라이
print(s[(250e4 < s) & (s < 500e4)]) #부분적인 인덱싱도 가
print(s[1:3],s["부산":"대구"])
print("\n")

#시리즈와 딕셔너리 자료형
print("시리즈와 딕셔너리 자료형")
print("서울" in s) #인덱스 라벨중 서울이 있는가
s2 = pd.Series({"서울": 9631482, "부산": 3393191, "인천": 2632035, "대전": 1490158},
               index=["부산","서울","인천","대전"])
#딕셔너리의 원소는 순서를 가지지 않으므로 시지르 데이터또한 보장되지 않는다
#순서를 정하고 싶다면 인덱스를 리스트로 지정해야한다
print("\n")

#인덱스 기반 연산
print("인덱스 기반 연산")
ds = s - s2
print(ds)
print("\n")
print("Nan이 아닌 값을 구하려면 notnull 메서드 사용 : {} ".format(ds.notnull()))
print(ds[ds.notnull()])
print("\n")
print("인구 증가울(%) 구하기")
rs = (s - s2) / s2 * 100
rs = rs[rs.notnull()]
print(rs)

#데이터의 갱신,추가,삭제

print("갱신")
rs["부산"] = 1.63
print("추가")
rs["대구"] = 1.41
print("삭제")
del rs["서울"]
print("\n")
#연습문제 4.1.1
print("연습문제 4.1.1\n")
#(1) : 임의로 두개의 시리즈 객체를 만든다. 모두 문자열 인덱스를 가져야하 포함되지 않는 라벨이 있어야함
p1 = pd.Series([198,192,162,232,193,203,163,180],
               index=["징크스","이즈리얼","제리","트리스타나","시비르","진","카이사","김태현"])
p2 = pd.Series([200,194,203,193,209,191,201,176],
               index=["징크스","이즈리얼","제리","트리스타나","시비르","진","카이사","김동주"])
print("시리즈데이터1 \n{}".format(p1))
print("\n")
print("시리즈데이터2 \n{}".format(p2))
print("\n")
ps = p2 - p1
print(ps)
print(p2.values - p1.values)
print("\n")

